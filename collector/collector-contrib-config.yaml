receivers:
  otlp:
    protocols:
      grpc:
        # OTeL receiver endpoint (grpc)
        endpoint: 127.0.0.1:4317
      http:
        # OTeL receiver endpoint (http)
        endpoint: 127.0.0.1:4318
  kafkametrics:
    brokers:
      - localhost:9092
      - localhost:9093
      - localhost:9094
    protocol_version: 2.0.0
    scrapers:
      - brokers
      - topics
      - consumers
  jmx/1:
    # configure the path where you installed opentelemetry-jmx-metrics jar
    jar_path: ${PWD}/opentelemetry-jmx-metrics.jar
    endpoint: service:jmx:rmi:///jndi/rmi://localhost:9991/jmxrmi
    target_system: jvm,kafka,kafka-consumer,kafka-producer
    collection_interval: 10s
    log_level: info
    resource_attributes:
      broker.name: broker1
  jmx/2:
    jar_path: ${PWD}/opentelemetry-jmx-metrics.jar
    endpoint: service:jmx:rmi:///jndi/rmi://localhost:9992/jmxrmi
    target_system: jvm,kafka,kafka-consumer,kafka-producer
    collection_interval: 10s
    log_level: info
    resource_attributes:
      broker.name: broker2
  jmx/3:
    jar_path: ${PWD}/opentelemetry-jmx-metrics.jar
    endpoint: service:jmx:rmi:///jndi/rmi://localhost:9993/jmxrmi
    target_system: jvm,kafka,kafka-consumer,kafka-producer
    collection_interval: 10s
    log_level: info
    resource_attributes:
      broker.name: broker3

exporters:
  otlp:
    endpoint: localhost:51375
    tls:
      insecure: true
  debug:
    verbosity: detailed

service:
  pipelines:
    metrics:
      receivers: [kafkametrics, jmx/1, jmx/2, jmx/3, otlp]
      exporters: [otlp]
    traces:
      receivers: [otlp]
      exporters: [otlp, debug]
    logs:
      receivers: [otlp]
      exporters: [otlp]
