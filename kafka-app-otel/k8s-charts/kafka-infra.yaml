apiVersion: v1
kind: Namespace
metadata:
  name: kafka-system
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: kafka-system
spec:
  type: ClusterIP
  ports:
    - port: 2181
      name: client
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: kafka-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.5.0
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-broker
  namespace: kafka-system
spec:
  serviceName: kafka-broker
  replicas: 3
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-server:7.5.0
          ports:
            - containerPort: 9092
              name: plaintext
            - containerPort: 9991
              name: jmx
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "2"
            - name: KAFKA_MIN_INSYNC_REPLICAS
              value: "2"
            - name: KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS
              value: "50"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
          command:
            - sh
            - -c
            - |
              BROKER_ID=${HOSTNAME##*-}
              export KAFKA_BROKER_ID=$BROKER_ID
              export KAFKA_ADVERTISED_LISTENERS="PLAINTEXT://${HOSTNAME}.kafka-broker:9092"
              export KAFKA_OPTS="${KAFKA_JMX_OPTS}"
              exec /etc/confluent/docker/run
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker
  namespace: kafka-system
spec:
  clusterIP: None
  selector:
    app: kafka-broker
  ports:
    - port: 9092
      name: plaintext
    - port: 9991
      name: jmx
      targetPort: 9991
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-init
  namespace: kafka-system
spec:
  template:
    spec:
      containers:
        - name: kafka-init
          image: confluentinc/cp-server:7.5.0
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for Kafka to be ready..."
              until kafka-topics --list --bootstrap-server kafka-broker-0.kafka-broker:9092; do
                echo "Waiting for Kafka..."
                sleep 5
              done

              echo "Checking broker status..."
              kafka-broker-api-versions --bootstrap-server kafka-broker-0.kafka-broker:9092

              echo "Waiting for internal topics..."
              until kafka-topics --list --bootstrap-server kafka-broker-0.kafka-broker:9092 | grep "__consumer_offsets"; do
                echo "Waiting for __consumer_offsets topic..."
                sleep 5
              done

              echo "Creating application topics..."
              kafka-topics --create --if-not-exists \
                --topic topic1 \
                --partitions 3 \
                --replication-factor 3 \
                --bootstrap-server kafka-broker-0.kafka-broker.kafka-system.svc.cluster.local:9092
              
              kafka-topics --create --if-not-exists \
                --topic topic2 \
                --partitions 3 \
                --replication-factor 3 \
                --bootstrap-server kafka-broker-0.kafka-broker.kafka-system.svc.cluster.local:9092
              
              kafka-topics --create --if-not-exists \
                --topic topic3 \
                --partitions 3 \
                --replication-factor 3 \
                --bootstrap-server kafka-broker-0.kafka-broker.kafka-system.svc.cluster.local:9092
              
              echo "All Topics:"
              kafka-topics --list --bootstrap-server kafka-broker-0.kafka-broker:9092
              
              echo "Topic Details:"
              kafka-topics --describe --bootstrap-server kafka-broker-0.kafka-broker:9092

      restartPolicy: Never
  backoffLimit: 3
